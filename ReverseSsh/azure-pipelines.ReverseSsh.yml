name: $(SourceBranchName)$(Rev:.r)

trigger:
  paths:
    include:
      - ReverseSsh

variables:
  - name: projectName
    value: ReverseSsh
    readonly: true

stages:
- stage: PublishScripts
  displayName: 'Publish scripts'
  jobs:
  - job: PublishScripts
    displayName: 'Publish scripts'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
        - publish: ${{ variables.projectName }}/Scripts
          displayName: 'Publish artifacts'
          artifact: ${{ variables.projectName }}
- stage: SetupReverseSshHome
  displayName: 'Deploy Home'
  jobs:
    - deployment: ReverseSshHome
      environment:
        name: Home
        resourceType: VirtualMachine
      workspace:
        clean: all
      variables:
        - group: Home
        - name: ReverseSshServiceExist
          value: false
      condition: in(variables['Build.Reason'], 'IndividualCI', 'Manual')
      strategy:
        runOnce:
          preDeploy:
            steps:
              - script: if systemctl --all --type service | grep 'reverse_ssh.service'; then echo "##vso[task.setvariable variable=ReverseSshServiceExist]true"; fi
                displayName: 'Check if service exist'
              - script: sudo systemctl stop reverse_ssh
                displayName: 'Stop ReverseSsh service'
                condition: eq(variables['ReverseSshServiceExist'], 'true')
              - script: sudo systemctl disable reverse_ssh
                displayName: 'Disable ReverseSsh service'
                condition: eq(variables['ReverseSshServiceExist'], 'true')
          deploy:
            steps:
              - task: CopyFiles@2
                displayName: 'Copy files'
                inputs:
                  SourceFolder: '$(Pipeline.Workspace)/${{ variables.projectName }}'
                  Contents: '**'
                  TargetFolder: '$(HOME)/${{ variables.projectName }}'
                  CleanTargetFolder: true
              - task: replacetokens@5
                displayName: 'Replace tokens for reverse ssh'
                inputs:
                  targetFiles: '$(HOME)/${{ variables.projectName }}/*'
                  encoding: 'auto'
                  tokenPattern: 'default'
                  writeBOM: true
                  actionOnMissing: 'warn'
                  keepToken: false
                  actionOnNoFiles: 'continue'
                  enableTransforms: false
                  enableRecursion: false
                  useLegacyPattern: false
                  useLegacyEmptyFeature: false
                  enableTelemetry: true
              - script: chmod +x $(HOME)/${{ variables.projectName }}/reverse_ssh.sh
                displayName: 'Make executable'
- stage: SetupReverseSshVostok
  displayName: 'Deploy Vostok'
  jobs:
    - deployment: ReverseSshVostok
      environment:
        name: Vostok
        resourceType: VirtualMachine
      workspace:
        clean: all
      variables:
        - group: Vostok
        - name: ReverseSshServiceExist
          value: false
      condition: and(startsWith(variables['Build.SourceBranch'], 'refs/heads/release-'), in(variables['Build.Reason'], 'IndividualCI', 'Manual'))
      strategy:
        runOnce:
          preDeploy:
            steps:
              - script: if systemctl --all --type service | grep 'reverse_ssh.service'; then echo "##vso[task.setvariable variable=ReverseSshServiceExist]true"; fi
                displayName: 'Check if service exist'
              - script: sudo systemctl stop reverse_ssh
                displayName: 'Stop ReverseSsh service'
                condition: eq(variables['ReverseSshServiceExist'], 'true')
              - script: sudo systemctl disable reverse_ssh
                displayName: 'Disable ReverseSsh service'
                condition: eq(variables['ReverseSshServiceExist'], 'true')
          deploy:
            steps:
              - task: CopyFiles@2
                displayName: 'Copy files'
                inputs:
                  SourceFolder: '$(Pipeline.Workspace)/${{ variables.projectName }}'
                  Contents: '**'
                  TargetFolder: '$(HOME)/${{ variables.projectName }}'
                  CleanTargetFolder: true
              - task: replacetokens@5
                displayName: 'Replace tokens for reverse ssh'
                inputs:
                  targetFiles: '$(HOME)/${{ variables.projectName }}/*'
                  encoding: 'auto'
                  tokenPattern: 'default'
                  writeBOM: true
                  actionOnMissing: 'warn'
                  keepToken: false
                  actionOnNoFiles: 'continue'
                  enableTransforms: false
                  enableRecursion: false
                  useLegacyPattern: false
                  useLegacyEmptyFeature: false
                  enableTelemetry: true
              - script: chmod +x $(HOME)/${{ variables.projectName }}/reverse_ssh.sh
                displayName: 'Make executable'
          on:
            success:
              steps:
                - script: sudo systemctl enable $(HOME)/${{ variables.projectName }}/reverse_ssh.service
                  displayName: 'Enable reverse ssh service'