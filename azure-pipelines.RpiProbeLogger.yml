name: $(SourceBranchName)$(Rev:.r)

trigger:
  tags:
    include:
      - release-*
  paths:
    include:
      - RpiProbeLogger
      - RpiProbeLogger.BusModels
      - ReportCsvHandlerTests
      - SenseServiceTests
      - TemperServiceTests
      - ReportServiceTests

variables:
  - name: projectName
    value: RpiProbeLogger
    readonly: true

parameters:
  - name: sdkVersion
    displayName: '.NET version'
    type: string
    default: net6.0
    values:
      - net5.0
      - net6.0
  - name: buildConfiguration
    default: Release
    displayName: 'Build configuration'
    type: string
    values:
      - Release
      - Debug
  - name: targetRuntime
    default: linux-arm
    displayName: 'Target runtime'
    type: string
    values:
      - linux-arm
      - win10-x64
      - osx.12-x64

stages:
- stage: BuildAndTest
  displayName: 'Build and test'
  jobs:
  - job: BuildAndTest
    displayName: 'Build and test'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
        - task: DotNetCoreCLI@2
          displayName: 'Test'
          inputs:
            command: 'test'
            projects: '**/*Tests.csproj'
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '${{ parameters.projectName }}/${{ parameters.projectName }}.csproj'
            arguments: '--self-contained -r ${{ parameters.targetRuntime }} -f ${{ parameters.sdkVersion }} -c ${{ parameters.buildConfiguration }}'
        - publish: $(System.DefaultWorkingDirectory)/${{ parameters.projectName }}/bin/${{ parameters.buildConfiguration }}/${{ parameters.sdkVersion }}/${{ parameters.targetRuntime }}
          displayName: 'Publish artifacts'
          artifact: ${{ parameters.projectName }}
- stage: DeployRpiProbeLoggerHome
  displayName: 'Deploy Home'
  jobs:
    - deployment: RpiProbeLoggerHome
      environment:
        name: Home
        resourceType: VirtualMachine
      strategy:
        runOnce:
          deploy:
            steps:
              - task: CopyFiles@2
                displayName: 'Copy files'
                inputs:
                  SourceFolder: '$(Pipeline.Workspace)/${{ parameters.projectName }}'
                  Contents: '**'
                  TargetFolder: '$(HOME)/${{ parameters.projectName }}'
                  CleanTargetFolder: true
              - script: chmod +x $(HOME)/${{ parameters.projectName }}/${{ parameters.projectName }}
                displayName: 'Make executable'
              - script: sudo systemctl enable $(HOME)/${{ parameters.projectName }}/probelogger.service
                displayName: 'Enable logger service'
              - script: sudo systemctl start probelogger
                displayName: 'Start logger service'
          on:
            success:
              steps:
                - script: sudo systemctl stop probelogger
                  displayName: 'Stop logger service'
                - script: sudo systemctl disable probelogger
                  displayName: 'Disable logger service'
              
- stage: DeployRpiProbeLoggerVostok
  displayName: 'Deploy Vostok'
  dependsOn: DeployRpiProbeLoggerHome
  jobs:
    - deployment: RpiProbeLoggerVostok
      environment: Vostok
